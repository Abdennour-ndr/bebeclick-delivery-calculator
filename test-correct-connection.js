/**
 * ุงุฎุชุจุงุฑ ูุน connection string ุงูุตุญูุญ
 */

import { MongoClient } from 'mongodb';
import dotenv from 'dotenv';

dotenv.config();

console.log('๐ ุงุฎุชุจุงุฑ MongoDB Atlas ูุน ุงูุฅุนุฏุงุฏุงุช ุงูุตุญูุญุฉ...');

const client = new MongoClient(process.env.MONGODB_URI, {
  serverSelectionTimeoutMS: 10000,
  connectTimeoutMS: 10000,
});

try {
  console.log('โณ ูุญุงููุฉ ุงูุงุชุตุงู...');
  await client.connect();
  console.log('โ ูุฌุญ ุงูุงุชุตุงู ูุน MongoDB Atlas!');
  
  // ุงุฎุชุจุงุฑ ping
  const adminDb = client.db('admin');
  const pingResult = await adminDb.command({ ping: 1 });
  console.log('๐ Ping ูุฌุญ:', pingResult);
  
  // ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
  const db = client.db('bebeclick-delivery');
  console.log('๐พ ูุชุตู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช: bebeclick-delivery');
  
  // ุนุฑุถ ุงููุฌููุนุงุช ุงูููุฌูุฏุฉ
  const collections = await db.listCollections().toArray();
  console.log(`๐ ุงููุฌููุนุงุช ุงูููุฌูุฏุฉ: ${collections.length}`);
  
  if (collections.length > 0) {
    console.log('๐ ุฃุณูุงุก ุงููุฌููุนุงุช:');
    collections.forEach(col => {
      console.log(`  - ${col.name}`);
    });
  } else {
    console.log('๐ญ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงุฑุบุฉ (ุฌุงูุฒุฉ ููุงุณุชุฎุฏุงู)');
  }
  
  // ุฅูุดุงุก ูุฌููุนุฉ ุงุฎุชุจุงุฑ
  console.log('\n๐งช ุงุฎุชุจุงุฑ ุงููุชุงุจุฉ...');
  const testCollection = db.collection('connection_test');
  
  const testDoc = {
    message: 'ุงุฎุชุจุงุฑ ุงุชุตุงู BebeClick ูุงุฌุญ',
    timestamp: new Date(),
    version: '1.0',
    status: 'connected'
  };
  
  const insertResult = await testCollection.insertOne(testDoc);
  console.log('โ ุชู ุฅุฏุฑุงุฌ ูุซููุฉ ุงุฎุชุจุงุฑ:', insertResult.insertedId);
  
  // ูุฑุงุกุฉ ุงููุซููุฉ
  const foundDoc = await testCollection.findOne({ _id: insertResult.insertedId });
  console.log('โ ุชู ูุฑุงุกุฉ ุงููุซููุฉ:', foundDoc.message);
  
  // ุญุฐู ุงููุซููุฉ ุงูุชุฌุฑูุจูุฉ
  await testCollection.deleteOne({ _id: insertResult.insertedId });
  console.log('โ ุชู ุชูุธูู ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ');
  
  console.log('\n๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช!');
  console.log('โ MongoDB Atlas ุฌุงูุฒ ููุงุณุชุฎุฏุงู');
  console.log('โ ูููู ุงูุขู ุชุดุบูู ุงูุฎุงุฏู ุงูุญูููู');
  
} catch (error) {
  console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error.message);
  
  if (error.message.includes('authentication')) {
    console.log('\n๐ ูุดููุฉ ูุตุงุฏูุฉ:');
    console.log('- ุชุญูู ูู ุงุณู ุงููุณุชุฎุฏู: inncomm16');
    console.log('- ุชุญูู ูู ูููุฉ ุงููุฑูุฑ: mDrRFM2wZO8NOyjA');
    console.log('- ุชุฃูุฏ ูู ูุฌูุฏ ุงููุณุชุฎุฏู ูู Database Access');
  }
  
  if (error.message.includes('timeout')) {
    console.log('\nโฐ ูุดููุฉ ุดุจูุฉ:');
    console.log('- ุชุญูู ูู Network Access (0.0.0.0/0)');
    console.log('- ุชุฃูุฏ ูู ุฃู ุงูู Cluster ูุนูู');
  }
  
} finally {
  await client.close();
  console.log('๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู');
}
